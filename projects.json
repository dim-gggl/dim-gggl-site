[
	{
	  "title": "epic events",
	  "slug": "epic_events",
	  "tagline": "CRM en CLI pour une agence d'événementiel",
	  "description": "Gérez vos événements, clients, contrats, ainsi que vos profils collaborateurs, avec une Interface en Ligne de Commande ergonomique et intuitive.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"Python",
		"PostgreSQL",
		"Click",
		"Rich",
		"JWT",
		"Sentry"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Flux CLI complet – Interface terminal intuitive et stylisée avec Rich pour créer, modifier, des événements, gérer sa clientèle et ses collaborateurs.",
		"Connexion et données sécurisées – Système de permissions et de validation des données permettant de garantir leur intégrité et d'en favoriser la sécurité.",
		"Base de données PostgreSQL – Sauvegarde automatique de toutes les données en base de données. Schéma dédié, robuste et scalable.",
		"Authentification via JWT – Système de connexion et de permissions basé sur JWT pour garantir la sécurité des données utilisateurs.",
		"Journalisation des actions – Journalisation des erreurs et actions effectuées via Sentry."
	  ],
	  "github_url": "https://github.com/dim-gggl/epic_events",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 0
	},
	{
	  "title": "GUDLFT",
	  "slug": "GUDLFT",
	  "tagline": "inscriptions aux compétitions par points.",
	  "description": "Application Flask destinée aux clubs : les secrétaires inscrivent des athlètes aux compétitions en dépensant des points du club, sous contrôle de quotas et de disponibilité.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"Python",
		"Flask",
		"Jinja",
		"Pytest",
		"Pytest-Flask",
		"Locust",
		"Coverage"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Authentification (secrétaires / admin)",
		"Liste des compétitions à venir (places restantes)",
		"Réservations d’athlètes (1 point = 1 place)",
		"Plafonds : solde du club, 12 places max par compétition/club",
		"Annulation et restitution des points (avant l’évènement)",
		"Espace admin : CRUD clubs/compétitions/utilisateurs/réservations",
		"Campagne de tests & débogage (Pytest)"
	  ],
	  "github_url": "https://github.com/dim-gggl/GUDLFT",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 1
	},
	{
	  "title": "SoftDesk Support",
	  "slug": "softdesk_support",
	  "tagline": "API REST de suivi de projets.",
	  "description": "API Django REST Framework pour gérer des projets, contributeurs, tickets (issues) et commentaires, sécurisée par JWT. Périmètres stricts par projet et par auteur.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"Python",
		"Django",
		"Django Rest Framework",
		"SimpleJWT",
		"Postman",
		"SQLite",
		"uv",
		"poetry",
		"MySQL",
		"HTML",
		"CSS",
		"JavaScript",
		"Git",
		"GitHub"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Authentification via JWT (SimpleJWT)",
		"CRUD Projets + gestion des contributeurs",
		"CRUD Tickets par projet (problème/demande)",
		"CRUD Commentaires par ticket",
		"Permissions fortes (visibilité limitée aux contributeurs)",
		"Pagination des listes",
		"Documentation OpenAPI/Swagger"
	  ],
	  "github_url": "https://github.com/dim-gggl/softdesk_support",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 2
	},
	{
	  "title": "LITReview",
	  "slug": "lit_review",
	  "tagline": "tickets + critiques, pour les lecteurs.",
	  "description": "Application Django permettant de publier des tickets (demandes de critique) et des critiques, suivre des utilisateurs, commenter, et consulter un fil combiné.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"Python",
		"poetry",
		"Django",
		"MVP",
		"SQLite"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Authentification (comptes de test fournis)",
		"Création de tickets (demander une critique)",
		"Publication de critiques (liées ou non à un ticket)",
		"Fil d’actualité (tickets + critiques des abonnements)",
		"Suivre / se désabonner d’utilisateurs",
		"Éditer / supprimer ses propres contenus"
	  ],
	  "github_url": "https://github.com/dim-gggl/lit_review",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 3
	},
	{
	  "title": "JustStreamIt",
	  "slug": "JustStreamIt",
	  "tagline": "découvrir les films les mieux notés.",
	  "description": "Front-end JavaScript consommant l’API OCMovies (OpenClassrooms) pour afficher le meilleur film, des tops par catégories, et des fiches détaillées en modal (affiche, résumé, casting).",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"HTML",
		"CSS",
		"JavaScript"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Film le mieux noté en hero (affiche + résumé court)",
		"Carrousels « Meilleurs films » et par genre",
		"Fiche détaillée en modal sur clic affiche",
		"Pagination côté API OCMovies",
		"UI responsive (HTML/CSS/JS vanilla)"
	  ],
	  "github_url": "https://github.com/dim-gggl/JustStreamIt",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 4
	},
	{
	  "title": "AlgoInvest&Trade",
	  "slug": "AlgoInvest-Trade",
	  "tagline": "Investir avec des algorithmes",
	  "description": "Ce programme implémente deux approches algorithmiques pour résoudre le problème du sac à dos : il calcule le portefeuille d’actions le plus rentable possible pour un budget maximal de 500 € (cas d’utilisation de la société fictive AlgoInvest&Trade).",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"Python",
		"CSV",
		"Force brute",
		"Programmation dynamique",
		"Algorithme du sac à dos",
		"Big O notation"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Force brute exhaustive – Parcourt **toutes** les combinaisons d’actions possibles afin de garantir la solution optimale en termes de profit, au prix d’un temps de calcul exponentiel (O(2^n)).",
		"Programmation dynamique – Algorithme optimisé inspiré du knapsack classique, beaucoup plus rapide (≈ O * n * × * W *) et recommandé dès que la liste dépasse ~20 actifs, utilisant une méthode de mémoïsation pour éviter les calculs redondants.",
		"Rapport sur les données invalides – Une option permet de détecter et d’afficher un compte-rendu des données corrompues ou inutilisables présentes dans les datasets fournis (par exemple coûts ou profits négatifs, valeurs manquantes, etc.)."
	  ],
	  "github_url": "https://github.com/dim-gggl/AlgoInvest-Trade",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 5
	},
	{
	  "title": "ChessUp",
	  "slug": "Chess_Up",
	  "tagline": "Gestionnaire de Tournois d’Échecs en Ligne de Commande",
	  "description": "Organisez et administrez un open d’échecs complet, du premier coup jusqu’à la remise des prix, sans jamais quitter votre terminal : pas de tableur, pas de galère, juste le jeu.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"Python",
		"P.O.O.",
		"CLI",
		"M.V.C.",
		"JSON",
		"flake8"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Flux CLI complet – Interface terminal intuitive pour créer un tournoi, ajouter des joueurs, lancer les rondes, saisir les résultats et éditer des rapports, le tout sans quitter le CLI.",
		"Appariement Suisse – Algorithme évitant les rencontres en double et gérant automatiquement les joueurs exemptés (bye) si besoin, pour des rondes équilibrées.",
		"Stockage JSON persistant – Sauvegarde automatique de toutes les données du tournoi et des joueurs dans des fichiers JSON, permettant de reprendre la gestion là où on l’avait laissée après une pause.",
		"Lisibilité améliorée – Sortie console enrichie via des codes couleur ANSI (utilitaire `ansify()` intégré) assurant une lecture confortable en thèmes clair ou sombre.",
		"Qualité du code – Code conforme à PEP8, avec outils de linting (flake8 et rapport HTML) pour maintenir une base de code propre et fiable dans le temps."
	  ],
	  "github_url": "https://github.com/dim-gggl/Chess_Up",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 6
	},
	{
	  "title": "Book Scraper",
	  "slug": "Book_Scraper",
	  "tagline": "l'assistant catalogue de livres.",
	  "description": "Book Scraper est un script Python complet pour extraire automatiquement les informations de livres du site Books to Scrape. Il récupère le titre, le prix, le stock, la note, la description et l'image de couverture de chaque livre, puis exporte ces données en fichiers CSV classés par catégorie.\nLe script peut également télécharger toutes les images de couverture (en option)\net navigue automatiquement à travers les pages du site (pagination).",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets d'études",
	  "technologies": [
		"Python",
		"Requests",
		"BeautifulSoup",
		"CLI"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Scraping de toutes les catégories de livres",
		"Récupération des titres, prix, stock, note, description, image",
		"Export des données en CSV par catégorie (dossier output_data/)",
		"Téléchargement des images de couverture (en option)",
		"Navigation automatique entre les pages (pagination)"
	  ],
	  "github_url": "https://github.com/dim-gggl/Book_Scraper",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 7
	},
	{
	  "title": "--clinkey-cli",
	  "slug": "clinkey-cli",
	  "tagline": "l'assistant mots de passe en ligne de commande.",
	  "description": "Clinkey est un générateur de mots de passe des plus simples. Proposant de générer des mots de passes robustes de manière aléatoire, en respectant les paramètres sélectionnés par l'utilisateur.\nIl est possible d'obtenir un mot de passe entre 16 et 128 caractères, composé uniquement de lettres organisées en syllabes prononçables,\nd'y ajouter des chiffres et des caractères spéciaux.\nDisponible sur Pypi : `pip install clinkey-cli`\nou via Homebrew : `brew tap dim-gggl/clinkey-cli && brew install clinkey-cli`.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets Perso",
	  "technologies": [
		"Python",
		"Click",
		"Rich"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"-n, --number Nombre de mots de passe à générer (1 à 1000)",
		"-l, --length Longueur du/des mots de passe (8 à 128 caractères)",
		"-t --type [ normal | strong | super_strong ] lettres | lettres + chiffres | lettres + chiffres + caractères spéciaux",
		"-low, --lower  Version en minuscules",
		"-ns, --no-sep  Version sans séparation entre les mots de passe",
		"-s --separator Choix du séparateur"
	  ],
	  "github_url": "https://github.com/dim-gggl/clinkey-cli",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 8
	},
	{
	  "title": "Aura",
	  "slug": "aura-app",
	  "tagline": "l'assistant collection d'art.",
	  "description": "Aura est une application de gestion de collection d'art. Proposant de gérer ses oeuvres, de les classer, de les trier, de les rechercher, de les partager, de les ajouter à sa collection.\nAura répond aux attentes d'un collectionneur, de l'amateur à l'expert, commissaire-priseur, etc.\nAura est une application web, responsive, et accessible. Et reste, sur tous ses aspects, extrêmement flexible.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets Perso",
	  "technologies": [
		"Django",
		"Django Rest Framework",
		"SQLite",
		"MySQL",
		"JWT",
		"HTML",
		"CSS",
		"JavaScript",
		"Git",
		"GitHub",
		"Google Fonts",
		"Bootstrap"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Création/Modification/Suppression d'une oeuvre, d'un artiste, d'un type d'art, de supports, de techniques",
		"Ajout d'un carnet d'adresse, d'un carnet de notes.",
		"Créer, gérer et suivre des listes de souhaits.",
		"Exporter des fiches détaillées des oeuvres en HTML ou PDF.",
		"Génère des suggestions d'oeuvres à exposer.",
		"Interface personnalisable avec près d'une vingtaine de thèmes originaux."
	  ],
	  "github_url": "https://github.com/dim-gggl/aura-app",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 9
	},
	{
	  "title": "kviR-Up",
	  "slug": "kvir_up",
	  "tagline": "la plateforme de listes de films LGBTQIA+.",
	  "description": "kviR-Up est une application web dynamique générant des listes de films sur des thématiques LGBTQIA+.\nChacun.e peut y créer son profil, y ajouter des films, les partager, et les commenter.\nLa D.A de kviR-Up repose sur le principe d'une galaxie des minorités, où chaque communauté est représentée par une planète.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets Perso",
	  "technologies": [
		"Django",
		"Jinja",
		"SQLite",
		"MySQL",
		"API TheMovieDB",
		"OpenAI",
		"HTML",
		"CSS",
		"JavaScript",
		"Git",
		"GitHub"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"S'inscrire et créer son profil",
		"Générer des listes aléatoires de films sur des thématiques LGBTQIA+",
		"Affiche du contenu dynamique via l'API TheMovieDB",
		"Commentaires et partages de listes",
		"Afficher ses planètes et les films qu'elles contiennent",
		"Outil de création de planètes boosté par OpenAI"
	  ],
	  "github_url": "https://github.com/dim-gggl/kvir_up",
	  "demo_url": "",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 10
	},
	{
	  "title": "Clinkey",
	  "slug": "Clinkey",
	  "tagline": "l'assistant mots de passe.",
	  "description": "Clinkey est un générateur de mots de passe des plus simples. Proposant de générer des mots de passes robustes de manière aléatoire, en respectant les paramètres sélectionnés par l'utilisateur.\nIl est possible d'obtenir un mot de passe entre 16 et 128 caractères, composé uniquement de lettres organisées en syllabes prononçables,\nd'y ajouter des chiffres et des caractères spéciaux.",
	  "primary_color": "#ff6b35",
	  "secondary_color": "#f7931e",
	  "background_style": "gradient",
	  "featured_image": "",
	  "logo": "",
	  "category": "Projets Perso",
	  "technologies": [
		"HTML",
		"CSS",
		"JavaScript",
		"Git",
		"GitHub",
		"Google Fonts",
		"Bootstrap"
	  ],
	  "challenges": "",
	  "learnings": "",
	  "features": [
		"Nombre de mots de passe à générer (1 à 1000)",
		"Longueur du/des mots de passe (8 à 128 caractères)",
		"Vanille = Que des lettres",
		"Strong = Lettres + Chiffres",
		"Super Twisted = Lettres + Chiffres + Caractères spéciaux",
		"Composé de syllabes prononçables",
		"Accepte un nombre très élevé de mots de passe"
	  ],
	  "github_url": "https://github.com/dim-gggl/ClinKey",
	  "demo_url": "https://dim-gggl.github.io/ClinKey",
	  "documentation_url": "",
	  "completed_at": null,
	  "duration": "",
	  "is_featured": false,
	  "is_published": true,
	  "order": 11
	}
  ]
  