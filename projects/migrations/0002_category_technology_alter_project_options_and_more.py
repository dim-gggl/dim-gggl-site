# Generated by Django 5.2.7 on 2025-10-29 15:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("color", models.CharField(default="#ff6b35", max_length=7)),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Technology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("backend", "Backend"),
                            ("frontend", "Frontend"),
                            ("database", "Database"),
                            ("tool", "Tool"),
                            ("language", "Language"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon name (e.g., 'python', 'django', 'postgresql')",
                        max_length=50,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#ff6b35",
                        help_text="HEX color for badges",
                        max_length=7,
                    ),
                ),
                (
                    "proficiency",
                    models.IntegerField(
                        choices=[
                            (1, "1/5"),
                            (2, "2/5"),
                            (3, "3/5"),
                            (4, "4/5"),
                            (5, "5/5"),
                        ],
                        default=3,
                        help_text="Mastery level out of 5",
                    ),
                ),
                ("order", models.IntegerField(default=0, help_text="Display order")),
            ],
            options={
                "verbose_name": "Technology",
                "verbose_name_plural": "Technologies",
                "ordering": ["order", "name"],
            },
        ),
        migrations.AlterModelOptions(
            name="project",
            options={
                "ordering": ["order", "-completed_at"],
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
            },
        ),
        migrations.AddField(
            model_name="project",
            name="background_style",
            field=models.CharField(
                choices=[
                    ("solid", "Solid color"),
                    ("gradient", "Gradient"),
                    ("pattern", "Pattern"),
                    ("image", "Image"),
                ],
                default="gradient",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="challenges",
            field=models.TextField(
                blank=True, help_text="Challenges and how they were solved"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="documentation_url",
            field=models.URLField(blank=True, verbose_name="Documentation URL"),
        ),
        migrations.AddField(
            model_name="project",
            name="duration",
            field=models.CharField(
                blank=True,
                help_text="Project duration (e.g., '3 months', '2 weeks')",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="featured_image",
            field=models.ImageField(
                blank=True,
                help_text="Primary image (recommended 1200x630px)",
                upload_to="projects/featured/",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="features",
            field=models.JSONField(
                default=list, help_text="List of main features (JSON array)"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="is_published",
            field=models.BooleanField(default=True, help_text="Publish this project"),
        ),
        migrations.AddField(
            model_name="project",
            name="learnings",
            field=models.TextField(
                blank=True, help_text="Key learnings from this project"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="logo",
            field=models.ImageField(
                blank=True,
                help_text="Optional project logo",
                upload_to="projects/logos/",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="primary_color",
            field=models.CharField(
                default="#ff6b35", help_text="Primary HEX color", max_length=7
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="secondary_color",
            field=models.CharField(
                default="#f7931e", help_text="Secondary HEX color", max_length=7
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="tagline",
            field=models.CharField(
                blank=True,
                default="",
                help_text="Short one-line tagline",
                max_length=200,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name="project",
            name="completed_at",
            field=models.DateField(
                blank=True, help_text="Project completion date", null=True
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="demo_url",
            field=models.URLField(blank=True, verbose_name="Demo URL"),
        ),
        migrations.AlterField(
            model_name="project",
            name="description",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Detailed project description (markdown supported)",
            ),
        ),
        migrations.AlterField(
            model_name="project",
            name="github_url",
            field=models.URLField(blank=True, verbose_name="GitHub URL"),
        ),
        migrations.AlterField(
            model_name="project",
            name="is_featured",
            field=models.BooleanField(default=False, help_text="Show on homepage"),
        ),
        migrations.AlterField(
            model_name="project",
            name="order",
            field=models.IntegerField(default=0, help_text="Display order (0 = first)"),
        ),
        migrations.AlterField(
            model_name="project",
            name="slug",
            field=models.SlugField(max_length=200, unique=True),
        ),
        migrations.AlterField(
            model_name="project",
            name="title",
            field=models.CharField(max_length=200, verbose_name="Title"),
        ),
        migrations.AddField(
            model_name="project",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="projects",
                to="projects.category",
            ),
        ),
        migrations.CreateModel(
            name="ProjectImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="projects/gallery/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("order", models.IntegerField(default=0)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery_images",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project image",
                "verbose_name_plural": "Project images",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="project",
            name="technologies",
            field=models.ManyToManyField(
                help_text="Technologies used in this project",
                related_name="projects",
                to="projects.technology",
            ),
        ),
    ]
